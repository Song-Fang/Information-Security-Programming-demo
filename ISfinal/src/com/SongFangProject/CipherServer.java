package com.SongFangProject;

import java.io.*;
import java.net.*;
import java.util.Base64;

import javax.crypto.*;
import javax.crypto.spec.SecretKeySpec;

public class CipherServer {
	public static void main(String[] args) throws Exception {
		int port = 7999;
		ServerSocket server = new ServerSocket(port);
		Socket s = server.accept();

		// YOU NEED TO DO THESE STEPS:
		// -Read the key from the file generated by the client.
		// -Use the key to decrypt the incoming message from socket s.
		// -Print out the decrypt String to see if it matches the orignal message.

		ObjectInputStream inputData = new ObjectInputStream(s.getInputStream());
		byte[] encryptionText = (byte[]) inputData.readObject();

		// get the key from local file
		FileReader getKey = new FileReader("key.txt");
		BufferedReader bf = new BufferedReader(getKey);
		String Key = bf.readLine();

		byte[] plainKey = Base64.getDecoder().decode(Key);
		SecretKey desKey = new SecretKeySpec(plainKey, 0, plainKey.length, "DES");

		// decipher messages
		Cipher c = Cipher.getInstance("DES");
		c.init(Cipher.DECRYPT_MODE, desKey);

		// Print plain text to see if it matches the original message.
		byte[] plaintext = c.doFinal(encryptionText);
		// output the plain text

		System.out.println("Key is " + Base64.getEncoder().encodeToString(desKey.getEncoded()));
		System.out.println("The plaintexts are: " + new String(plaintext, "UTF-8"));
		
		inputData.close();
		server.close();
		bf.close();
	}
}